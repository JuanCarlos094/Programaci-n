import java.util.ArrayList;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Scanner;

class Song{
    private String titulo;
    private double duracion;

    public Song(String titulo, double duracion){
        this.titulo=titulo;
        this.duracion=duracion;
    }

    public String getTitulo(){
        return titulo;
    }

    @Override
    public String toString() {
        return "Song{" +
                "titulo='" + titulo + '\'' +
                ", duracion=" + duracion +
                '}';
    }
}

public class Album {
    private String nombre;
    private String artista;
    private ArrayList<Song>canciones;

    public Album(String nombre, String artista){
        this.nombre=nombre;
        this.artista=artista;
        this.canciones= new ArrayList<Song>();
    }

    private Song findSong(String titulo){
        for(Song song: this.canciones){
            if(song.getTitulo().equalsIgnoreCase(titulo)){
                return song;
            }
        }
        return null;
    }
    public boolean addSong(String titulo, double duracion){
        if(findSong(titulo)== null){
            canciones.add(new Song(titulo,duracion));
            return true;
        }else{
            return false;
        }
    }
    public boolean addToPlayList(int nSong, LinkedList<Song> playlist){
        int indice= nSong -1;
        if(indice >=0 && indice <= canciones.size()){
            playlist.add(this.canciones.get(indice));
            return true;
        }else{
            System.out.println("El número de la canción no existe, prueba otro.");
            return false;
        }
    }
    public boolean addToPlayList(String titulo, LinkedList<Song>playlist){
        Song revisa=findSong(titulo);
        if(revisa != null){
            playlist.add(revisa);
            return true;
        }else {
            System.out.println("La canción: "+titulo+" no se encuentra el Album");
            return false;
        }
    }
}

class Main {
    static Scanner sc = new Scanner(System.in);
    static LinkedList<Song> playlist = new LinkedList<Song>();
    public static void main(String[] args) {
        ArrayList<Album>albums = new ArrayList<Album>();

    Album album1 = new Album("Meteora","Linkin Park");
    album1.addSong("Foreword",0.13);
    album1.addSong("Don't Stay",3.07);
    album1.addSong("Somewhere I Belong",3.33);
    album1.addSong("Lying from You",2.55);
    album1.addSong("Hit the Floor",2.44);
    album1.addSong("Easier to Run",3.24);
    album1.addSong("Faint",2.42);
    album1.addSong("Figure.09",3.17);
    album1.addSong("Breaking the Habit",3.16);
    album1.addSong("From the Inside",2.53);
    album1.addSong("Nobody's Listening",2.58);
    album1.addSong("Session",2.23);
    album1.addSong("Numb",3.08);
    albums.add(album1);

    Album album2= new Album("Donde quiero estar","Quevedo");
    album2.addSong("Intro-Speech Cruzzi",1);
    album2.addSong("Ahora Qué",2.51);
    album2.addSong("Yankee",3.14);
    album2.addSong("Vista Al Mar",3);
    album2.addSong("Playa del Inglés",3.57);
    album2.addSong("Sin Señal",3.05);
    album2.addSong("Dame",3.51);
    album2.addSong("Cuéntale",3.18);
    album2.addSong("Luces Azules",2.4);
    album2.addSong("Punto G",2.31);
    album2.addSong("Muñeca",3.3);
    album2.addSong("Wanda",2.4);
    album2.addSong("Me Falta Algo",3.12);
    album2.addSong("Lisboa",2.31);
    album2.addSong("Éramos Dos",2.54);
    album2.addSong("Donde Quiero Estar",3.2);
    albums.add(album2);

    album1.addToPlayList(3,playlist);
    album1.addToPlayList(13,playlist);
    album2.addToPlayList("Dame",playlist);
    album2.addToPlayList(13,playlist);
    album2.addToPlayList("Éramos Dos",playlist);

    printPlayList(playlist);

    play();
    }

    private static void printPlayList(LinkedList<Song>playlist){
        System.out.println("Lista de reporducción");
        if(playlist.isEmpty()){
            System.out.println("Está vacía");
        }
        for(Song song: playlist){
            System.out.println(song);
        }
        System.out.println("");
    }

    private static void play(){
        ListIterator<Song> it= playlist.listIterator();
        boolean salir= false;
        boolean continuar=true;
        if(playlist.isEmpty()){
            System.out.println("No hay canciones en la playlist");
            return;
        }else{
            System.out.println("Reproduciendo "+it.next().toString());
        }
        while(!salir){
            System.out.println("Menú de opciones");
            System.out.println("0 - Salir de la lista de reproducción");
            System.out.println("1 - Reproducir la siguiente canción de la playlist");
            System.out.println("2 - Reproducir la canción previa de la playlist");
            System.out.println("3 - Repetir la canción");
            System.out.println("4 - Imprimir la lista de canciones de la playlist");
            System.out.println("5 - Volver a Imprimir el menú");
            System.out.println("6 - Eliminar una canción de la playlist");
            System.out.print("Ingresa una opción: ");

            int opcion= sc.nextInt();
            sc.nextLine();

            switch (opcion){
                case 0:
                    salir=true;
                    break;
                case 1:
                    if(!continuar) {
                        if (it.hasNext())
                            it.next();
                    }
                    if(it.hasNext()){
                        System.out.println("Reproduciendo siguiente canción: " + it.next());
                }else{
                    System.out.println("Ya no hay más canciones en la lista, selecciona otra");
                }
                break;
                case 2:
                    if(continuar){
                        if (it.hasPrevious())
                            it.previous();
                            continuar=false;
                    }
                    if(it.hasPrevious()){
                        System.out.println("Escuchando "+it.previous());
                    }else{
                        System.out.println("Estás en la primera canción");
                        continuar=true;
                    }
                    break;
                case 3:
                if(it.hasPrevious()){ 
                    it.previous;
                    System.out.println("Reporduciendo la canción "+it.next());
                }else{
                    System.out.println("No hay ninguna canción sonando"+it.previous());
                }
                break;
                case 4:
                    System.out.println("Lista de canciones en la playlist");
                    for(Song song: playlist){
                        System.out.println(song);
                    }
                    break;
                case 5:
                    break;
                case 6:
                    if(playlist.isEmpty()){
                        System.out.println("No hay canciones en la playlist");
                    }else{
                        System.out.println("Introduce el nombre de la canción a eliminar: ");
                        String nombreSong = sc.nextLine();
                        boolean cancionEn=false;
                        for(int i =0; i< playlist.size();i++){
                            if(playlist.get(i).getTitulo().equalsIgnoreCase(nombreSong)){
                                playlist.remove(i);
                                if(it.hasNext()) {
                                    System.out.println("La canción " + nombreSong + " ha sido removida.");
                                }else{
                                    System.out.println("La canción " + nombreSong + " ha sido removida.");
                                    System.out.println("Estas en la última canción de la playlist");
                                }
                                cancionEn=true;
                                break;
                            }
                        }

                        if(!cancionEn){
                            System.out.println("La canción "+nombreSong+" no se encuentra\n");

                        }
                    }
                    break;
            }
        }
        System.out.println("Saliendo del reprdocutor de música");

    }
}
